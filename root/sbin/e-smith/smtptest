#!/usr/bin/perl

#
# smtptest -- SMTP client for nethserver-mail-common testing 
#
#  Copyright (C) 2012 Nethesis srl
#
#  This script is part of NethServer.
# 
#  NethServer is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
# 
#  NethServer is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
# 
#  You should have received a copy of the GNU General Public License
#  along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

package NethServer::smtptest;

use strict;
use Getopt::Long; 
use Net::SMTP;
use Net::Cmd qw(CMD_OK);
use Data::Dumper;
use Carp;
use POSIX qw(strftime locale_h);


my $timestamp = strftime("%a, %d %b %Y %H:%M:%S %z", localtime());

my $verbose = 0;

my %options = (
    'input' => '',
    'port' => '25',
    'host' => '127.0.0.1',
    'from' => 'unspecified@example.com',
    'subject' => '',
    'addr' => '127.0.0.1',
    'hello' => 'localhost.localdomain',
    'to' => 'postmaster@localhost',
    'verbose' => \$verbose
);

GetOptions(\%options, 
	   'from=s',
	   'to=s',
	   'hello|ehlo=s',
	   'addr=s',
	   'subject=s',
	   'host|server=s',
	   'port=i',
	   'input|in=s',	  
	   'help|h',
	   'verbose|v',
    );

if( $options{help} ) {
    print q(Usage: smtptest [options]
Options:

    --from SENDERADDR                  Set envelope sender to SENDERADDR
    --to   RECIPIENTADDR               Set envelope recipient to RECIPIENTADDR
    --hello STRING, --ehlo STRING      Send helo STRING
    --addr IPADDR                      Set XCLIENT ADDR attribute to IPADDR
    --subject SUBJ                     Set the default message subject
    --host HOST, --server HOST         Connect to HOST
    --port PORT                        Connect to tcp PORT
    --input FILENAME                   Read message from FILENAME ("-" is standard input)
    --help, -h                         Print this help message
    --verbose, -v                      Show server response

);
    exit 0;
}

my $payload = '';

if ($options{input}) {

    my $hasSubject;
    my $hasDate;
    my $hasTo;
    my $inHeader = 1;

    open(INPUT, '< ' . $options{input}) or die($options{input} . ': ' . $!);
    while( ! eof INPUT ) {
	my $line .= <INPUT>;

	if($inHeader) {
	    if($line =~ /^From: /) {
		# Skip message From header:
		next; 
	    } elsif($line =~ /^Subject: /) {	       
		if($options{subject}) {
		    $line = '';
                    # Override message subject from command line argument:
		    $hasSubject = 0;
		} else {
		    $hasSubject = 1;
		}
	    } elsif($line =~ /^To: /) {
		$hasTo = 1;
	    } elsif($line =~ /^$/) {
		$inHeader = 0;

		# Insert the From header from options:
		$payload .= sprintf("From: %s\r\n", $options{from}); 

		# Add other (required) headers:
		$payload .= sprintf("To: %s\r\n", $options{to}) if ( ! $hasTo);
		$payload .= sprintf("Subject: %s\r\n", $options{subject}) if ( ! $hasSubject);
		$payload .= sprintf("Date: %s\r\n", $timestamp) if ( ! $hasDate);
	    }
	}

	$payload .= $line;
    }
}

my $response;

my $conn = Net::SMTP->new(Host => $options{host} . ':' . $options{port}) or die();

if($verbose) {
    print "Connected to " . $conn->domain() . "\n      " . $conn->banner() . "\n     " . $conn->message() . "\n";
}

$conn->command(sprintf("XCLIENT NAME=%s ADDR=%s", $options{hello}, $options{addr}))->response() == CMD_OK or die($conn->message());

$conn->command(sprintf("EHLO %s", $options{hello}))->response() == CMD_OK or die($conn->message());

$conn->mail($options{from}) or die($conn->message());

$conn->recipient($options{to}) or die($conn->message());

if( $payload ) {

    $conn->data($payload) or die $conn->message();

} else {
    my $subject = $options{subject} || 'Test message';

    my $defaultBody = <<MESSAGE;
This is the default body of the message "$subject" sent on $timestamp

--
This message has been generated by smtptest script
Copyright (C) 2012 - Nethesis srl
http://www.nethesis.it
MESSAGE

    $conn->data(
	sprintf("Subject: %s\r\n", $subject),
	sprintf("Date: %s\r\n", $timestamp),
	sprintf("From: %s\r\n", $options{from}),
	sprintf("To: %s\r\n", $options{to}),
	"\r\n",
	$defaultBody
	) or die($conn->message());

}

$conn->quit() or die($conn->message());

